buildscript {
	repositories {
		maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
	}
}

plugins {
	id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.spongepowered.mixin' version '0.7.+'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
}

version = modVersion
group = 'net.mcalec.mcalecs'
archivesBaseName = "mcalecs-${minecraftVersion}"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "build.gradle is starting!"
println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"

minecraft {
    mappings channel: 'official', version: minecraftVersion

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
			workingDirectory project.file('run')
			
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'mcalecs'
            
            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }
        server {
			workingDirectory project.file('run-server')
			
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'mcalecs'
            
            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }
        gameTestServer {
        	workingDirectory project.file('run-server')
        	
        	property 'forge.logging.markers', 'REGISTRIES'
        	property 'forge.logging.console.level', 'debug'
        	property 'forge.enabledGameTestNamespaces', 'mcalecs'
        	
        	mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }
        data {
        	property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'mcalecs'

            args '--mod', 'mcalecs', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

			mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
	// Mod Location
    flatDir {
        dirs 'libs'
    }

    maven {
    	// Curse Maven
    	name = "Curse Maven"
        url "https://cursemaven.com"
    }

    maven {
    	// Modrinth Maven
    	name = "Modrinth Maven"
        url = "https://api.modrinth.com/maven"
    }

    maven {
        // Mod Maven
        name = "Mod Maven"
        url = "https://modmaven.dev"
    }

    maven {
        // location of the maven that hosts JEI files before January 2023
        name = "Progwml6's maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }

    maven {
        // location of the maven that hosts JEI files since January 2023
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
    }

    maven {
    	// Fuzs Maven
        name = "Fuzs Mod Resources"
        url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/"
    }
    maven { url "https://maven.shedaniel.me" }
    
}

mixin {
    //config "mixins.mcalecs.json"
    //add sourceSets.main, "mixins.mcalecs.refmap.json"

    showMessageTypes = true
}

dependencies {
    // Minecraft and Forge Versions
    minecraft "net.minecraftforge:forge:${minecraftVersion}-${forgeVersion}" // Forge 1.20.1 (47.2.20)
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor' // SpongedPowered Mixin Annotation Processor

    // Curse Maven
    implementation fg.deobf("curse.maven:oauth-account-manager-546462:4620007") // Oauth Account Manager
    implementation fg.deobf("curse.maven:u-team-core-273744:4681290") // U Team Core
    implementation fg.deobf("curse.maven:configured-457570:5180900") // Configured
	implementation fg.deobf("curse.maven:catalogue-459701:4766090") // Catalogue
	implementation fg.deobf("curse.maven:worldedit-225608:4586218") // WorldEdit
    implementation fg.deobf("curse.maven:config-menus-forge-544048:4672356") // Forge Config Menus

    // Fuzs Maven
	runtimeOnly(fg.deobf("fuzs.forgeconfigscreens:forgeconfigscreens-forge:8.0.0")) // Forge Config Screens

    // Mod Maven
    compileOnly(fg.deobf("mezz.jei:jei-${minecraftVersion}-common-api:${jeiVersion}")) // Just Enough Items (Compile Common API)
    compileOnly(fg.deobf("mezz.jei:jei-${minecraftVersion}-forge-api:${jeiVersion}")) // Just Enough Items (Compile Forge API)
    implementation fg.deobf("dev.architectury:architectury-forge:${archVersion}") // Architectury API
    runtimeOnly(fg.deobf("mezz.jei:jei-${minecraftVersion}-forge:${jeiVersion}")) // Just Enough Items (Forge Runtime JEI)

    // Shedaniel Maven
    //implementation fg.deobf("me.shedaniel:RoughlyEnoughItems-forge:${reiVersion}") // Roughly Enough Items
    implementation fg.deobf("me.shedaniel.cloth:cloth-config-forge:${clothVersion}") // Cloth Config API
    
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "mcalecs",
                "Specification-Vendor"    : "McAlec",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "McAlec",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

println "build.gradle is done!"
